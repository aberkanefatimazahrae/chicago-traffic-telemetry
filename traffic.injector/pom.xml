<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
	~ Copyright (C) 2017 Google Inc. ~ ~ Licensed under the Apache License, Version 
	2.0 (the "License"); you may not ~ use this file except in compliance with 
	the License. You may obtain a copy of ~ the License at ~ ~ http://www.apache.org/licenses/LICENSE-2.0 
	~ ~ Unless required by applicable law or agreed to in writing, software ~ 
	distributed under the License is distributed on an "AS IS" BASIS, WITHOUT 
	~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the 
	~ License for the specific language governing permissions and limitations 
	under ~ the License. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>trafficflow</groupId>
	<version>0.0.1-SNAPSHOT</version>

	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<bigquery.version>v2-rev355-1.22.0</bigquery.version>
		<google-clients.version>1.22.0</google-clients.version>
		<guava.version>20.0</guava.version>
		<hamcrest.version>1.3</hamcrest.version>
		<joda.version>2.4</joda.version>
		<junit.version>4.12</junit.version>
		<maven-compiler-plugin.version>3.6.2</maven-compiler-plugin.version>
		<exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
		<maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
		<maven-shade-plugin.version>3.0.0</maven-shade-plugin.version>
		<mockito.version>1.9.5</mockito.version>
		<pubsub.version>v1-rev10-1.22.0</pubsub.version>
		<slf4j.version>1.7.25</slf4j.version>
		<surefire-plugin.version>2.20</surefire-plugin.version>
		<application.mainClass>com.google.cloud.dataflow.dmesser.TrafficInjector</application.mainClass>
		<application.dependencies>lib</application.dependencies>
		<application.workdir>/opt/traffic-injector</application.workdir>
	</properties>

	<repositories>
		<repository>
			<id>ossrh.snapshots</id>
			<name>Sonatype OSS Repository Hosting</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<outputDirectory>${project.build.directory}/${application.dependencies}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>${application.dependencies}</classpathPrefix>
							<mainClass>com.google.cloud.dataflow.dmesser.TrafficInjector</mainClass>
							<!-- match with base version string naming of Maven Dependency Plugin -->
							<useUniqueVersions>false</useUniqueVersions>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/docker</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire-plugin.version}</version>
				<configuration>
					<parallel>all</parallel>
					<threadCount>4</threadCount>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>${surefire-plugin.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Ensure that the Maven jar plugin runs before the Maven shade plugin 
				by listing the plugin higher within the file. -->
			

			

			<!-- Configures `mvn package` to produce a bundled jar ("fat jar") for 
				runners that require this for job submission to a cluster. -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-shade-plugin</artifactId> 
				<version>${maven-shade-plugin.version}</version> <executions> <execution> 
				<phase>package</phase> <goals> <goal>shade</goal> </goals> <configuration> 
				<finalName>${project.artifactId}-bundled-${project.version}</finalName> <filters> 
				<filter> <artifact>*:*</artifact> <excludes> <exclude>META-INF/LICENSE</exclude> 
				<exclude>META-INF/*.SF</exclude> <exclude>META-INF/*.DSA</exclude> <exclude>META-INF/*.RSA</exclude> 
				</excludes> </filter> </filters> <transformers> <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" 
				/> <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"> 
				<manifestEntries> <Main-Class>com.google.cloud.dataflow.dmesser.TrafficInjector</Main-Class> 
				</manifestEntries> </transformer> </transformers> </configuration> </execution> 
				</executions> </plugin> -->
			<!-- <plugin> <groupId>com.spotify</groupId> <artifactId>dockerfile-maven-plugin</artifactId> 
				<version>1.4.0</version> <executions> <execution> <id>default</id> <goals> 
				<goal>build</goal> <goal>push</goal> </goals> </execution> </executions> 
				<configuration> <repository>dmesser/traffic-injector</repository> <tag>${project.version}</tag> 
				<buildArgs> <JAR_FILE>${project.build.finalName}.jar</JAR_FILE> </buildArgs> 
				</configuration> </plugin> -->

		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec-maven-plugin.version}</version>
					<configuration>
						<cleanupDaemonThreads>false</cleanupDaemonThreads>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencies>
		<!-- Adds a dependency on a specific version of the Dataflow SDK. -->

		<!-- Dependencies below this line are specific dependencies needed by the 
			examples code. -->
		<dependency>
			<groupId>com.google.api-client</groupId>
			<artifactId>google-api-client</artifactId>
			<version>${google-clients.version}</version>
			<exclusions>
				<!-- Exclude an old version of guava that is being pulled in by a transitive 
					dependency of google-api-client -->
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava-jdk5</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<dependency>
			<groupId>com.google.http-client</groupId>
			<artifactId>google-http-client</artifactId>
			<version>${google-clients.version}</version>
			<exclusions>
				<!-- Exclude an old version of guava that is being pulled in by a transitive 
					dependency of google-api-client -->
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava-jdk5</artifactId>
				</exclusion>
			</exclusions>
		</dependency>




		<!-- Add slf4j API frontend binding with JUL backend -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>${slf4j.version}</version>
			<!-- When loaded at runtime this will wire up slf4j to the JUL backend -->
			<scope>runtime</scope>
		</dependency>

		<!-- Hamcrest and JUnit are required dependencies of PAssert, which is 
			used in the main code of DebuggingWordCount example. -->




		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-pubsub</artifactId>
			<version>0.44.0-beta</version>
		</dependency>
	</dependencies>
	<artifactId>trafficinjector</artifactId>
</project>
